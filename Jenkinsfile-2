pipeline {
    agent any
    options{
        timestamps()
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timeout(time: 1, unit: "MINUTES")
    }
    environment {
        env="dev"
    }
    stages {
        stage('Build Docker Image For Tests') {
            steps {
                sh 'docker build --rm -t pipeline-2 .'
            }
        }
        stage('List Of Docker Images') {
            steps {
                sh 'docker images'
            }
        }
        stage('CodeAnalyze And Run Docker'){
            parallel{
                stage("Analyze Files"){
                    steps{
                        echo 'Analyzing'
                    }
                }
                stage("Run Docker"){
                    steps{
                        sh ''
                        sh 'docker run --rm -v pwd/Results:/app/Results pipeline-2'
                    }
                }
            }
        }
        stage("Results"){
            steps{
                robot archiveDirName: 'robot-plugin', outputPath: 'Results', overwriteXAxisLabel: '', passThreshold: 100.0, unstableThreshold: 100.0
            }
        }
    }
}
